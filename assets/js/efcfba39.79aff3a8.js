"use strict";(self.webpackChunknirvana_documentation=self.webpackChunknirvana_documentation||[]).push([[1298],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var i=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),d=o,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||r;return t?i.createElement(f,a(a({ref:n},c),{},{components:t})):i.createElement(f,a({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,a=new Array(r);a[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var u=2;u<r;u++)a[u]=t[u];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5383:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var i=t(7462),o=(t(7294),t(3905));const r={title:"Jist"},a=void 0,l={unversionedId:"utilities/jist",id:"version-3.25/utilities/jist",title:"Jist",description:"Overview",source:"@site/versioned_docs/version-3.25/utilities/jist.mdx",sourceDirName:"utilities",slug:"/utilities/jist",permalink:"/IlluminaConnectedAnnotationsDocumentation/3.25/utilities/jist",editUrl:"https://github.com/Illumina/IlluminaConnectedAnnotationsDocumentation/edit/master/versioned_docs/version-3.25/utilities/jist.mdx",tags:[],version:"3.25",frontMatter:{title:"Jist"},sidebar:"docs",previous:{title:"Data Manager",permalink:"/IlluminaConnectedAnnotationsDocumentation/3.25/utilities/data-manager"},next:{title:"Annotation Engine vs Data update",permalink:"/IlluminaConnectedAnnotationsDocumentation/3.25/frequently-asked-questions/Annotator-vs-data-update"}},s=[{value:"Overview",id:"overview",children:[],level:2},{value:"How to use",id:"how-to-use",children:[{value:"Example",id:"example",children:[],level:3}],level:2}],u={toc:s},c="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The Jist tool provides capability to combine multiple Illumina Connected Annotations JSON outputs into one."),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("p",null,"To combine the JSON outputs, make sure the Jasix index files (.jsi) are presented along with the json files. If the Jasix index file is not there, use ",(0,o.kt)("a",{parentName:"p",href:"/IlluminaConnectedAnnotationsDocumentation/3.25/utilities/jasix"},"Jasix")," to\ngenerate before runing Jist."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"dotnet Jist.dll -h\n---------------------------------------------------------------------------\nJist                                                (c) 2024 Illumina, Inc.\n                                                                     3.25.0\n---------------------------------------------------------------------------\n\nUSAGE: dotnet Jist.dll -i /path/to/nirvana/output/prefix -o /path/to/combined/json\nCombines multiple Illumina Connected Annotations JSON files into one\n\nOPTIONS:\n      --in, -i <VALUE>       input file prefix\n      --out, -o <VALUE>      compressed output file name (default:console)\n      --help, -h             displays the help menu\n      --version, -v          displays the version\n\n##### Supported Annotation Sources #####\nBasic Tier: DECIPHER, GME, GERP, DANN, REVEL, ClinGen, gnomAD, phyloP, TOPMed, DGV, 1000 Genomes, CliinVar, dbSNP, FusionCatcher, MITOMAP, MultiZ100Way\n\nProfessional Tier: PrimateAI(GRCh37), PrimateAI-3D(GRCh38), SpliceAI, COSMIC, OMIM.\n\n##### Contact #####\nProfessional content licensing, feedback and technical support: annotation_support@illumina.com.\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scss"},"dotnet Jist.dll -i input/Dragen-VC-wg_somatic_tumor_normal -o output/Dragen-VC-wg_somatic_tumor_normal_combined.json.gz\n---------------------------------------------------------------------------\nJist                                                (c) 2024 Illumina, Inc.\n                                                                     3.25.0\n---------------------------------------------------------------------------\n\nFiles to stitch\ninput/Dragen-VC-wg_somatic_tumor_normal-chr1-hg38.json.gz\ninput/Dragen-VC-wg_somatic_tumor_normal-chr2-hg38.json.gz\ninput/Dragen-VC-wg_somatic_tumor_normal-chr3-hg38.json.gz\nTotal position blocks written: 231\nGene lines read: 1368\nUnique gene lines: 588\n\nTime: 00:00:00.1\n\n")))}p.isMDXComponent=!0}}]);